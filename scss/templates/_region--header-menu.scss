
// Needed if we are filling in the left and right of the bar so it doesn't trigger horizontal scrollbars.
body {
  overflow-x: hidden;
}

#region--header-menu {

  // Only show desktop menu in large windows.
  display: none;
  @include breakpoint(large) {
    display: block;
  }

  nav {
    // Line up the menu text with other text elements.
    margin: 0 -#{$container-padding};

    // Have a background color for the main menu.
    ul {
      background: color(main-menu-background);
    }

    // Fill in the areas to the left and the right of the main menu bar with the background color.
    @include breakpoint(large) {
      position: relative;
      &::before, &::after {
        content: "";
        position: absolute;
        width: calc(50vw - #{$container-width} / 2 - #{$container-padding});
        height: 100%;
        background: color(main-menu-background);
        top: 0;
      }
      &::before { right: 100%; }
      &::after { left: 100%; }
    }

    // Add lines between items in the dropdowns;
    li {
      li + li {
        border-top: 1px solid color(off-white);
      }
      // Add a line around the dropdown in case of menu overlap.
      ul {
        box-shadow: 0px 0px 1px 1px color(off-white);
      }
    }

    // Common menu link styles.
    a {
      display: block;
      height: 100%;
      color: color(main-menu-text);
      font-weight: bold;
      text-decoration: none;
      &:hover, &:focus {
        outline-offset: -1px;
        background: color(main-menu-hover);
      }
      padding: 1em #{$container-padding};
    }

    // Keep the parent item hover color when over dropdowns.
    li:hover, li:focus-within {
      background: color(main-menu-hover);
    }

    // Make subitems a normal font weight.
    ul ul a {
      font-weight: normal;
    }

    // Give dropdowns the menu background on desktop;
    ul ul {
      background: color(main-menu-background);
    }

    // Show the menu items side-by-side and wrap if there isn't enough room.
    > ul {
      display: flex;
      flex-wrap: wrap;
      > li {
        position: relative;
        ul {
          position: absolute;
          z-index: 100;
          top: calc(100% + 1px);
          left: 0;
          left: var(--shift-left);
          width: 20em;
           ul {
            display: none;
          }
          display: none;
        }
        // Show dropdowns on hover, over-riding the aria-controls button state.
        &:hover > ul {
          display: block !important;
        }
        // Class set by js to keep dropdowns from extending past the edge of the window.
        &.dropdown-align-right {
          ul {
            right: 0;
            left: auto;
          }
        }
      }
    }

    // Style the mobile submenu toggle buttons.
    li {
      position: relative;
      button.header-menu-toggle {
        position: absolute;
        top: 0;
        right: 0;
        padding: $container-padding / 2 $container-padding;
        border: 0;
        background: transparent;
        svg {
          background: rgba(255, 255, 255, .5);
          border-radius: .5em;
          border: 1.5px solid transparent;
          box-sizing: content-box;
          padding: $container-padding / 2;
        }
        &:hover {
          svg {
            background: color(main-menu-hover);
          }
        }
        &:focus {
          outline: 0;
          svg {
            border-color: color(main-menu-text);
          }
        }
        &[aria-expanded="true"] {
          svg {
            transform: rotate(180deg);
          }
          & + ul {
            display: block;
          }
        }
        // Don't display toggle to start.
        display: none;
      }
    }

    // Don't leave dropdowns open on desktop if there is no hover and no focus within them.
    li:not(:focus-within):not(:hover) button.header-menu-toggle + ul {
      display: none;
    }

    // Only show the menu toggles next to the menu item when focus is within the menu.
    &:focus-within:not([data-mouse-click="true"]) {
      > ul > li {
        padding-right: 2em;
        a {
          padding: 1em .5em 1em .5em;
        }
      }
      button.header-menu-toggle {
        display: block;
        padding: 0;
        svg {
          padding: 1em .5em;
          background: none;
          border-width: 1px;
          border-radius: 0;
        }
      }
    }
  }
}
