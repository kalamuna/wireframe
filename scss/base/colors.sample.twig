{% extends "@styleguide/styleguide-sample.twig" %}

{% set name = "Colors and Usages" %}
{% set description = "The palette of colors that are used throughout this site." %}

{% set add_padding = true %}
{% set exclude_twig = true %}

{% block sample %}

  {# We are going to build a map of the css variable color values and usages in twig. #}
  {% set colorsValueMap = {} %}
  {% set colorsUsageMap = {} %}

  {# Read in the colors.scss file to access all the variables that are set. #}
  {% for line in source(file_root ~ ".scss")|split('\n') %}
    {# Only want the lines of the file that are color variables (and not the accessor function). #}
    {% if '--color-' in line and 'return' not in line %}
      {% set key = line|split(':')[0]|trim %}
      {% set value = line|split(':')[1]|trim %}
      {# If the variable value is a var function, then it is a usage. If not, a value. #}
      {% if 'var' in value %}
        {% set colorsUsageMap = colorsUsageMap|merge({(key) : (value)}) %}
      {% else %}
        {% set colorsValueMap = colorsValueMap|merge({(key) : (value)}) %}
      {% endif %}
    {% endif %}
  {% endfor %}

  <h3>Color values</h3>

  {# Create a grid of color swatches with the color name and value on top of that color. #}
  <div>
    {% for key, value in colorsValueMap %}
      {% set keyparts = key|split('-') %}
      {# If it is a light color or completely white, use dark text. Otherwise use white text. #}
      {% set color = (keyparts[3] == 'white' or keyparts[4] > 60) ? '#000' : '#fff' %}
      <div style="padding: 1em; margin-block-end: 1em; color: {{ color }}; background: var({{ key }});">
        {{ key }}: {{ value }}
      </div>
    {% endfor %}
  </div>

  <h3>Color usage</h3>

  {# Create a second grid of colors for the usages. #}
  <div>
    {% for key, value in colorsUsageMap %}
      {% set variableParts = value|replace({')' : '', ';' : ''})|split('-') %}
      {# This time we look at the value being referenced to see if it is a light color that needs dark text. #}
      {% set color = (variableParts[3] == 'white' or variableParts[4] > 60) ? '#000' : '#fff' %}
      <div style="padding: 1em; margin-block-end: 1em; color: {{ color }}; background: var({{ key }});">
        {{ key }}: {{ value }}
      </div>
    {% endfor %}
  </div>

{% endblock sample %}
